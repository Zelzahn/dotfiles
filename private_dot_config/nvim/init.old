syntax enable
set nocompatible
set number relativenumber
set cursorline

call plug#begin()
" Goyo is for a focused vim mode
Plug 'junegunn/goyo.vim'
Plug 'junegunn/limelight.vim'

" tabular plugin is used to format tables
Plug 'godlygeek/tabular'
" JSON front matter highlight plugin
Plug 'elzr/vim-json'
Plug 'plasticboy/vim-markdown'
Plug 'iamcco/markdown-preview.nvim', { 'do': 'cd app && yarn install' }

" theme used
Plug 'joshdick/onedark.vim'
Plug 'catppuccin/nvim', { 'as': 'catppuccin' }
" syntax coloring for lots of languages
Plug 'sheerun/vim-polyglot'
" statusline
Plug 'itchyny/lightline.vim'

" Elixir support
Plug 'elixir-editors/vim-elixir'
Plug 'mhinz/vim-mix-format'

" smooth scrolling for Ctrl+D and Ctrl+F
Plug 'psliwka/vim-smoothie'

" git helper
Plug 'tpope/vim-fugitive'

" telescope
Plug 'nvim-lua/plenary.nvim'
Plug 'BurntSushi/ripgrep'
Plug 'nvim-telescope/telescope.nvim', { 'tag': 'nvim-0.6' }
Plug 'nvim-treesitter/nvim-treesitter'
Plug 'sharkdp/fd'

" ranger in vim
Plug 'francoiscabrol/ranger.vim'
Plug 'rbgrouleff/bclose.vim'

" latex live preview
Plug 'lervag/vimtex'

" file icons
Plug 'nvim-tree/nvim-web-devicons'

" lsp support
Plug 'neovim/nvim-lspconfig'
call plug#end()

autocmd! User GoyoEnter Limelight
autocmd! User GoyoLeave Limelight!

" Color name (:help cterm-colors) or ANSI code
let g:limelight_conceal_ctermfg = 'gray'
let g:limelight_conceal_ctermfg = 240

" set to 1, the nvim will auto close current preview window when change
" from markdown buffer to another buffer
" default: 1
let g:mkdp_auto_close = 0

let g:lightline = {
  \ 'colorscheme': 'onedark',
  \ }

let g:mix_format_on_save = 1

syntax on
colorscheme catppuccin-macchiato " onedark

set noshowmode 

if (has("termguicolors"))
    set termguicolors
endif

function! CheckBackspace() abort
  let col = col('.') - 1
  return !col || getline('.')[col - 1]  =~# '\s'
endfunction

" let mapleader = "<"
map <space> \
nnoremap <leader>ff <cmd>Telescope git_files<cr>

" let ranger by default open in new tab
let g:ranger_map_keys = 0
map <leader>f :RangerNewTab<CR>

" latex live preview settings
let g:vimtex_view_method = 'zathura'
" set python exec for asdf
let g:python3_host_prog = '~/.asdf/installs/python/3.10.9/bin/python'

require'lspconfig'.elixirls.setup{
    cmd = { "/home/zelzahn/.config/elixir-ls/language_server.sh" };
}

